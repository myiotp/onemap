<?xml version="1.0" encoding="UTF-8" ?>    
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.onemap.dao.PesticideTypeDao">
	
	<resultMap type="PesticideType" id="PesticideTypeRs">
		<result column="id" property="id" />
		<result column="pesticideType" property="pesticideType" />
		<result column="description" property="description" />	
		<collection property="whereClause" ofType="Clause">			
		</collection>	
	</resultMap>
	<!-- 
	<resultMap type="PesticideType" id="PesticideTypeCapacityRs">
		<result column="core_capacity" property="coreCapacity" />
		<result column="related_capacity" property="relatedCapacity" />
		<result column="common_capacity" property="commonCapacity" />
		<result column="core_current_amount" property="coreCurrentAmount" />
		<result column="related_current_amount" property="relatedCurrentAmount" />
		<result column="common_current_amount" property="commonCurrentAmount" />
	</resultMap> -->
	<sql id="fields">
		id,pesticideType,description
	</sql>
	<sql id="fieldsForInsert">
		pesticideType,description
	</sql>
	<sql id="tablename">
		PesticideType
	</sql>
	<select id="list" resultMap="PesticideTypeRs">
		select
		<include refid="fields" />
		from
		<include refid="tablename" />
	</select>
	<select id="listByLimit" resultMap="PesticideTypeRs" parameterType="PesticideType">
		select
		<include refid="fields" />
		from
		<include refid="tablename" />  
		<trim prefix="where" prefixOverrides="and |or">
			<if test="whereClause != null">
				<foreach item="clause" collection="whereClause" separator=" AND " open="(" close=")"> 
	                ${clause.column} ${clause.operator} #{clause.value} 
	            </foreach> 
			</if>
		</trim>
		<if test="orderBy != null and order != null">
			order by ${orderBy} ${order}
		</if>
		 limit #{startPos} ,#{pageSize} 
	</select>
	<insert id="save" parameterType="PesticideType">
		insert into
		<include refid="tablename" />
		(
		<include refid="fieldsForInsert" />
		)
		values(#{pesticideType},#{description})
	</insert>
	<select id="get" resultMap="PesticideTypeRs" parameterType="Integer">
		select
		<include refid="fields" />
		from
		<include refid="tablename" />
		where id=${id}
	</select>
	<select id="count" resultType="Integer">
		select
		count(*)
		from
		<include refid="tablename" />	
		<trim prefix="where" prefixOverrides="and |or">
			<if test="whereClause != null">
				<foreach item="clause" collection="whereClause" separator=" AND " open="(" close=")"> 
	                ${clause.column} ${clause.operator} #{clause.value} 
	            </foreach> 
			</if>
		</trim>
	</select>
	<!-- 
	<select id="getCapacityById" resultMap="PesticideTypeCapacityRs"
		parameterType="Integer">
		select sum(core_capacity) as core_capacity,
		sum(related_capacity) as related_capacity,
		sum(common_capacity) as
		common_capacity,
		sum(core_current_amount) as core_current_amount,
		sum(related_current_amount) as related_current_amount,
		sum(common_current_amount) as common_current_amount

		from stm_area as t1
		left join stm_region as t2 on t1.region_id=t2.id
		left join stm_warehouse as t3 on t2.warehouse_id=t3.id

		where t3.PesticideType_id
		=${id}
	</select> -->
	<update id="update" parameterType="PesticideType">
		update
		<include refid="tablename" />
		set
		pesticideType=#{pesticideType},description=#{description}
		where id=#{id}
	</update>
	<delete id="delete" parameterType="PesticideType">
		delete from
		<include refid="tablename" />
		where id=#{id}
	</delete>
</mapper>
