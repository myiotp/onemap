<?xml version="1.0" encoding="UTF-8" ?>    
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.onemap.dao.ManagementRecordDao">
	
	<resultMap type="ManagementRecord" id="ManagementRecordRs">
		<result column="id" property="id" />
		<result column="ordernumber" property="ordernumber" />
		<result column="truckId" property="truckId" />
		<result column="cargoId" property="cargoId" />
		<result column="operationTime" property="operationTime" />
		<result column="type" property="type" />
		<result column="status" property="status" />
		<result column="operator" property="operator" />
		<result column="mgtrecordmemo" property="mgtrecordmemo" />
		<result column="vardate1" property="vardate1" />
		<result column="vardate2" property="vardate2" />
		<result column="var1" property="var1" />
		<result column="var2" property="var2" />
		<result column="var3" property="var3" />
		
		<result column="item1" property="item1" />
		<result column="item2" property="item2" />
		<result column="item3" property="item3" />
		<result column="item4" property="item4" />
		<result column="item5" property="item5" />
		<result column="price1" property="price1" />
		<result column="price2" property="price2" />
		<result column="price3" property="price3" />
		<result column="price4" property="price4" />
		<result column="price5" property="price5" />
		
		<result column="approver1" property="approver1" />
		<result column="approver2" property="approver2" />
		<result column="approver3" property="approver3" />
		<result column="approver4" property="approver4" />
		<result column="approver5" property="approver5" />
		<result column="approver6" property="approver6" />
		
		<result column="approvelevel" property="approvelevel" />
		
		
		<result column="datetime1" property="datetime1" />
		<result column="datetime2" property="datetime2" />
		<result column="datetime3" property="datetime3" />
		<result column="datetime4" property="datetime4" />
		<result column="datetime5" property="datetime5" />
		<result column="datetime6" property="datetime6" />
		
		<result column="company1" property="company1" />
		<result column="company2" property="company2" />
		<result column="company3" property="company3" />
		<result column="company4" property="company4" />
		
		<result column="blockNumber" property="blockNumber" />
		<result column="cropType" property="cropType" />
		<result column="seedType" property="seedType" />
		<result column="fertilizerType" property="fertilizerType" />
		<result column="pesticideType" property="pesticideType" />	
		
		<result column="queryBeginTime" property="queryBeginTime" />
		<result column="queryEndTime" property="queryEndTime" />	
		
		<collection property="whereClause" ofType="Clause">
			
		</collection>
		
	</resultMap>
	<sql id="fieldsForInsert">
        ordernumber,truckId,cargoId,operationTime,type,status,operator,mgtrecordmemo,vardate1,vardate2,var1,var2,var3,
        item1,item2,item3,item4,item5,price1, price2, price3, price4, price5
    </sql>
	<sql id="fields">
		id,<include refid="fieldsForInsert" />,approver1,approver2,approver3,approver4,approver5,approver6,
        datetime1,datetime2,datetime3,datetime4,datetime5,datetime6,company1,company2,company3,company4,approvelevel
	</sql>
	
	<sql id="tablename">
		ManagementRecord
	</sql>
	<select id="list" resultMap="ManagementRecordRs" parameterType="ManagementRecord">
		select 
		<include refid="fields" />	
		from
		ManagementRecord 
		
		<trim prefix="where" prefixOverrides="and |or">

			<if test="truckId != null">
				truckId = #{truckId} 
			</if>
			<if test="cargoId != null">
				and cargoId  = #{cargoId}
			</if>
			<if test="operator != null">
                and operator  = #{operator}
            </if>
            <if test="type != null">
                and type  = #{type}
            </if>
            <if test="status != null">
                and status  = #{status}
            </if>
			<if test="queryBeginTime != null and queryEndTime != null">
				and (date(operationTime) between #{queryBeginTime} and #{queryEndTime})
			</if>
		</trim>
		order by ordernumber desc
	</select>
	<select id="listByCargoIdOrTruckId" resultMap="ManagementRecordRs" parameterType="ManagementRecord">
        select  
        <include refid="fields" /> 
        from
        ManagementRecord where (truckId = #{truckId} or cargoId  = #{cargoId})  order by ordernumber desc
    </select>
	<select id="listByStatus" resultMap="ManagementRecordRs" parameterType="ManagementRecord">
        select 
        <include refid="fields" /> 
        from
        ManagementRecord 
        
        <trim prefix="where" prefixOverrides="and |or">

            <if test="truckId != null">
                truckId = #{truckId} 
            </if>
            <if test="cargoId != null">
                and cargoId  = #{cargoId}
            </if>
            <if test="type != null">
                and type  = #{type}
            </if>
            <if test="status != null">
                and status  = #{status}
            </if>
            <if test="operator != null">
                and operator  = #{operator}
            </if>
            
        </trim>
        order by ordernumber desc
    </select>
	<select id="listByLimit" resultMap="ManagementRecordRs" parameterType="ManagementRecord">
		select 
		<include refid="fields" />
		from
		ManagementRecord 
		
		<trim prefix="where" prefixOverrides="and |or">

			<if test="truckId != null">
				truckId = #{truckId} 
			</if>
			<if test="cargoId != null">
				and cargoId  = #{cargoId}
			</if>
			<if test="id != null">
				and id  = #{id}
			</if>
			<if test="type != null">
                and type  = #{type}
            </if>
			<if test="operator != null">
                and operator  = #{operator}
            </if>
            <if test="status != null">
                and status  = #{status}
            </if>
			
			<if test="whereClause != null">
				<foreach item="clause" collection="whereClause" separator=" AND " open="(" close=")"> 
	                ${clause.column} ${clause.operator} #{clause.value} 
	            </foreach> 
			</if>
		</trim>
		<if test="orderBy != null and order != null">
			order by ${orderBy} ${order}
		</if>
		 limit #{startPos} ,#{pageSize} 
	</select>
	
	<insert id="save" parameterType="ManagementRecord">
		insert into
		<include refid="tablename" />
		(
		 <include refid="fieldsForInsert" />
		)
		values(#{ordernumber},#{truckId},#{cargoId},#{operationTime},#{type},#{status},#{operator},#{mgtrecordmemo},#{vardate1},
		#{vardate2},#{var1},#{var2},#{var3},#{item1},#{item2},#{item3},#{item4},#{item5},
		#{price1},#{price2},#{price3},#{price4},#{price5}
		)
	</insert>
	<select id="get" resultMap="ManagementRecordRs" parameterType="Integer">
		select
		<include refid="fields" /> 
		from
		<include refid="tablename" />
		where id=${id}
	</select>
	<select id="getByUrl" resultMap="ManagementRecordRs" parameterType="String">
		select
		<include refid="fields" /> 
		from
		<include refid="tablename" />
		where var8='${var8}'
	</select>
	<select id="count" resultType="Integer">
		select
		count(*)
		from
		ManagementRecord 
		<trim prefix="where" prefixOverrides="and |or">

			<if test="truckId != null">
				truckId = #{truckId} 
			</if>
			<if test="cargoId != null">
				and cargoId  = #{cargoId}
			</if>
			<if test="id != null">
				and id  = #{id}
			</if>
			<if test="type != null">
                and type  = #{type}
            </if>
			<if test="operator != null">
                and operator  = #{operator}
            </if>
            <if test="var1 != null">
                and var1  = #{var1}
            </if>
			<if test="queryBeginTime != null and queryEndTime != null">
				and (date(operationTime) between #{queryBeginTime} and #{queryEndTime})
			</if>
			<if test="whereClause != null">
				<foreach item="clause" collection="whereClause" separator=" AND " open="(" close=")"> 
	                ${clause.column} ${clause.operator} #{clause.value} 
	            </foreach> 
			</if>
		</trim>
	</select>
	
	<update id="update" parameterType="ManagementRecord">
		update
		<include refid="tablename" />
		set
		truckId=#{truckId},cargoId=#{cargoId},operationTime=#{operationTime},status=#{status},operator=#{operator},
		mgtrecordmemo=#{mgtrecordmemo},vardate1=#{vardate1},vardate2=#{vardate2},var1=#{var1},
		var2=#{var2},var3=#{var3}
		where id=#{id}
	</update>
	<update id="updateReturnOrder" parameterType="ManagementRecord">
        update
        <include refid="tablename" />
        set vardate1=#{vardate1},item1=#{item1},item2=#{item2},item3=#{item3},item4=#{item4},item5=#{item5},
        price1=#{price1},price2=#{price2},price3=#{price3},price4=#{price4},price5=#{price5},
        company1=#{company1},company2=#{company2},company3=#{company3},company4=#{company4},
        approver3=#{approver3},datetime3=#{datetime3},approver4=#{approver4},datetime4=#{datetime4},approvelevel=#{approvelevel}
        where id=#{id}
    </update>
    <update id="updateReturnOrderApprover1" parameterType="ManagementRecord">
        update
        <include refid="tablename" />
        set
        approver1=#{approver1},datetime1=#{datetime1},approvelevel=1
        where id=#{id}
    </update>
    <update id="updateReturnOrderApprover2" parameterType="ManagementRecord">
        update
        <include refid="tablename" />
        set
        approver2=#{approver2},datetime2=#{datetime2},approvelevel=2
        where id=#{id}
    </update>
    <update id="updateReturnOrderApprover3" parameterType="ManagementRecord">
        update
        <include refid="tablename" />
        set
        approver3=#{approver3},datetime3=#{datetime3},approvelevel=3
        where id=#{id}
    </update>
    <update id="updateReturnOrderApprover4" parameterType="ManagementRecord">
        update
        <include refid="tablename" />
        set
        approver4=#{approver4},datetime4=#{datetime4},approvelevel=4
        where id=#{id}
    </update>
    <update id="updateReturnOrderApprover5" parameterType="ManagementRecord">
        update
        <include refid="tablename" />
        set
        approver5=#{approver5},datetime5=#{datetime5},approvelevel=5
        where id=#{id}
    </update>
    <update id="updateReturnOrderApprover6" parameterType="ManagementRecord">
        update
        <include refid="tablename" />
        set
        approver6=#{approver6},datetime6=#{datetime6},approvelevel=6
        where id=#{id}
    </update>
     <update id="updateStatusWithApprovers" parameterType="ManagementRecord">
        update
        <include refid="tablename" />
        set status=#{status},approver1=#{approver1},datetime1=#{datetime1},approver2=#{approver2},datetime2=#{datetime2}
        where id=#{id}
    </update>
    
	<update id="updateStatus" parameterType="Integer">
        update
        <include refid="tablename" />
        set
        status=#{status}
        where id=#{id}
    </update>
    <update id="updateApproveLevel" parameterType="Integer">
        update
        <include refid="tablename" />
        set
        approvelevel=#{approvelevel}
        where id=#{id}
    </update>
   
	<delete id="delete" parameterType="ManagementRecord">
		delete from
		<include refid="tablename" />
		where id=#{id}
	</delete>
</mapper>
