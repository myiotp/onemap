<?xml version="1.0" encoding="UTF-8" ?>    
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.onemap.dao.PublicationDao">
	
	<resultMap type="Publication" id="PublicationRs">
		<result column="id" property="id" />
		<result column="title" property="title" />
		<result column="author" property="author" />
		<result column="time" property="time" />
		<result column="source" property="source" />
		<result column="showamount" property="showamount" />
		<result column="category" property="category" />
		<result column="content" property="content" />
		<result column="readamount" property="readamount" />
		<result column="summary" property="summary" />
		<collection property="whereClause" ofType="Clause">			
		</collection>
	</resultMap>
	<sql id="fields">
		id,<include refid="fieldsForInsert" />
	</sql>
	<sql id="fieldsForInsert">
		title,author,time,source,showamount,category,content,readamount,summary
	</sql>
	<sql id="tablename">
		publication
	</sql>
	<select id="list" resultMap="PublicationRs">
		select
		<include refid="fields" />
		from
		<include refid="tablename" />
		<trim prefix="where" prefixOverrides="and |or">
			<if test="whereClause != null">
				<foreach item="clause" collection="whereClause" separator=" AND " open="(" close=")"> 
	                ${clause.column} ${clause.operator} #{clause.value} 
	            </foreach> 
			</if>
		</trim>
		<if test="orderBy != null and order != null">
			order by ${orderBy} ${order}
		</if>
		 
	</select>
	<select id="listByLimit" resultMap="PublicationRs" parameterType="Publication">
		select
		<include refid="fields" />
		from
		<include refid="tablename" /> 
		<trim prefix="where" prefixOverrides="and |or">
			<if test="whereClause != null">
				<foreach item="clause" collection="whereClause" separator=" AND " open="(" close=")"> 
	                ${clause.column} ${clause.operator} #{clause.value} 
	            </foreach> 
			</if>
		</trim>
		<if test="orderBy != null and order != null">
			order by ${orderBy} ${order}
		</if>
		 limit #{startPos} ,#{pageSize} 

	</select>
	<insert id="save" parameterType="Publication">
		insert into
		<include refid="tablename" />
		(
		<include refid="fieldsForInsert" />
		)
		values(#{title},#{author},#{time},#{source},#{showamount},#{category},#{content},#{readamount},#{summary})
	</insert>
	<select id="get" resultMap="PublicationRs" parameterType="Integer">
		select
		<include refid="fields" />
		from
		<include refid="tablename" />
		where id=${id}
	</select>
	<update id="update" parameterType="Publication">
		update
		<include refid="tablename" />
		set
		title=#{title},author=#{author},time=#{time},source=#{source},showamount=#{showamount},category=#{category},content=#{content},
		readamount=#{readamount},summary=#{summary}
		where id=#{id}
	</update>
	<delete id="delete" parameterType="Publication">
		delete from
		<include refid="tablename" />
		where id=#{id}
	</delete>
	<sql id="searchCondition">
		<if test="id != null">
			and id=#{id}
		</if>
		<if test="title != null">
			and title like '%#{title}%'
		</if>
		
	</sql>
	
	<select id="count" parameterType="Publication" resultType="Integer">
		select count(*) from
		<include refid="tablename" />
		<trim prefix="where" prefixOverrides="and |or">
			<if test="whereClause != null">
				<foreach item="clause" collection="whereClause" separator=" AND " open="(" close=")"> 
	                ${clause.column} ${clause.operator} #{clause.value} 
	            </foreach> 
			</if>
		</trim>
		
	</select>
</mapper>
