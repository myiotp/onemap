<?xml version="1.0" encoding="UTF-8" ?>    
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.onemap.dao.FarmMachineryDao">
    
	<resultMap type="FarmMachinery" id="FarmMachineryRs">
		<result column="id" property="id" />
		<result column="machineryNumber" property="machineryNumber" />
		<result column="machineryType" property="machineryType" />
		<result column="status" property="status" />
		<result column="ownerName" property="ownerName" />
		<result column="owneridnumber" property="owneridnumber" />
		<result column="ownerTelephone" property="ownerTelephone" />
		<result column="owneraddress" property="owneraddress" />
		<result column="operationTime" property="operationTime" />
		
		<result column="gpsdevice" property="gpsdevice" />
		<result column="gpsinstaller" property="gpsinstaller" />
		<result column="gpstype" property="gpstype" />
		<result column="gpsinstalldate" property="gpsinstalldate" />
		<result column="licensenumber" property="licensenumber" />
		<result column="xinghao" property="xinghao" />
		<result column="gefu" property="gefu" />
		<result column="vendor" property="vendor" />
		<result column="workfor" property="workfor" />
		<result column="machinerysize" property="machinerysize" />
		
		<result column="weight" property="weight" />
		<result column="volume" property="volume" />
		<result column="brand" property="brand" />
		<result column="automation" property="automation" />
		<result column="powertype" property="powertype" />
		<result column="purchasetime" property="purchasetime" />
		<result column="producetime" property="producetime" />
		<result column="driverlicense" property="driverlicense" />
		<result column="enginenumber" property="enginenumber" />
		<result column="bodynumber" property="bodynumber" />
		<result column="machinerypower" property="machinerypower" />
		<result column="zipcode" property="zipcode" />
		
		<result column="cooperativeId" property="cooperativeId" />
		
		 <association property="cooperative" javaType="Site">
			<result property="id" column="cooperativeId"/>
			<result property="cooperativeNumber" column="cooperativeNumber"/>
			<result property="province" column="province"/>
			<result property="city1" column="city1"/>
		 </association>	
		 
		 <collection property="whereClause" ofType="Clause">			
		 </collection>
	</resultMap>
	
	<sql id="fieldsForInsert">
		machineryNumber,machineryType,status,ownerName,owneridnumber,ownerTelephone, owneraddress,
		 gpsdevice,
  gpsinstaller,
  gpstype,
  gpsinstalldate,
  licensenumber,
  xinghao,
  gefu,
  vendor,
  workfor,
  machinerysize,
  weight,
  volume,
  brand,
  automation,
  powertype,
  purchasetime,
  producetime,
  driverlicense,
  enginenumber,
  bodynumber,
  machinerypower  
	</sql>
	<sql id="fields">
		id,<include refid="fieldsForInsert" />
	</sql>
	<sql id="tablename">
		FarmMachinery
	</sql>
	<select id="list" resultMap="FarmMachineryRs" parameterType="FarmMachinery">
		select
		FarmMachinery.id, FarmMachinery.cooperativeId as cooperativeId, <include refid="fieldsForInsert" />,
        cooperative.cooperativeNumber as cooperativeNumber, cooperative.province as province,
        cooperative.city1 as city1, FarmMachinery.zipcode as zipcode
       from FarmMachinery 
		left outer join cooperative on FarmMachinery.cooperativeId = cooperative.id
		<trim prefix="where" prefixOverrides="and |or">
			<if test="cooperativeId != null">
				and FarmMachinery.cooperativeId = #{cooperativeId}
			</if>
			<if test="operationTime != null">
				and Date(FarmMachinery.operationTime) = Date(#{operationTime})
			</if>
			<if test="machineryNumber != null">
				and FarmMachinery.machineryNumber = #{machineryNumber}
			</if>
			<if test="province != null">
				and cooperative.province = #{province}
			</if>
			<if test="city1 != null">
				and cooperative.city1 = #{city1}
			</if>
			<if test="driverlicense != null">
				and FarmMachinery.driverlicense = #{driverlicense}
			</if>
			<if test="licensenumber != null">
				and FarmMachinery.licensenumber = #{licensenumber}
			</if>
			<if test="enginenumber != null">
				and FarmMachinery.enginenumber = #{enginenumber}
			</if>
			<if test="gpsdevice != null">
				and FarmMachinery.gpsdevice = #{gpsdevice}
			</if>
		</trim>
	</select>
	<select id="listByLimit" resultMap="FarmMachineryRs" parameterType="FarmMachinery">
		select
		FarmMachinery.id, FarmMachinery.cooperativeId as cooperativeId, <include refid="fieldsForInsert" />,
        cooperative.cooperativeNumber as cooperativeNumber, cooperative.province as province,
        cooperative.city1 as city1, FarmMachinery.zipcode as zipcode
       from FarmMachinery 
		left outer join cooperative on FarmMachinery.cooperativeId = cooperative.id
		<trim prefix="where" prefixOverrides="and |or">
			<if test="cooperativeId != null">
				and FarmMachinery.cooperativeId = #{cooperativeId}
			</if>
			<if test="operationTime != null">
				and Date(FarmMachinery.operationTime) = Date(#{operationTime})
			</if>
			<if test="machineryNumber != null">
				and FarmMachinery.machineryNumber = #{machineryNumber}
			</if>
			<if test="province != null">
				and cooperative.province = #{province}
			</if>
			<if test="city1 != null">
				and cooperative.city1 = #{city1}
			</if>
			<if test="driverlicense != null">
				and FarmMachinery.driverlicense = #{driverlicense}
			</if>
			<if test="licensenumber != null">
				and FarmMachinery.licensenumber = #{licensenumber}
			</if>
			<if test="enginenumber != null">
				and FarmMachinery.enginenumber = #{enginenumber}
			</if>
			<if test="gpsdevice != null">
				and FarmMachinery.gpsdevice = #{gpsdevice}
			</if>
			
			<if test="whereClause != null">
				<foreach item="clause" collection="whereClause" separator=" AND " open="(" close=")"> 
	                ${clause.column} ${clause.operator} #{clause.value} 
	            </foreach> 
			</if>
		</trim>
		<if test="orderBy != null and order != null">
			order by ${orderBy} ${order}
		</if>
		 limit #{startPos} ,#{pageSize}  
 
	</select>
	<select id="count" resultType="Integer" parameterType="FarmMachinery">
		select
		count(*)
		from
		<include refid="tablename" />
		<trim prefix="where" prefixOverrides="and |or">
			<if test="cooperativeId != null">
				and FarmMachinery.cooperativeId = #{cooperativeId}
			</if>
			<if test="operationTime != null">
				and Date(FarmMachinery.operationTime) = Date(#{operationTime})
			</if>
			<if test="machineryNumber != null">
				and FarmMachinery.machineryNumber = #{machineryNumber}
			</if>
			
			<if test="driverlicense != null">
				and FarmMachinery.driverlicense = #{driverlicense}
			</if>
			<if test="licensenumber != null">
				and FarmMachinery.licensenumber = #{licensenumber}
			</if>
			<if test="enginenumber != null">
				and FarmMachinery.enginenumber = #{enginenumber}
			</if>
			<if test="whereClause != null">
				<foreach item="clause" collection="whereClause" separator=" AND " open="(" close=")"> 
	                ${clause.column} ${clause.operator} #{clause.value} 
	            </foreach> 
			</if>
		</trim>
	</select>
	<insert id="save" parameterType="FarmMachinery">
		insert into
		<include refid="tablename" />
		(
		<include refid="fieldsForInsert" />,cooperativeId,zipcode
		)
		values(#{machineryNumber},#{machineryType},#{status},#{ownerName},#{owneridnumber},
		#{ownerTelephone},#{owneraddress},#{gpsdevice},#{gpsinstaller},#{gpstype},
		#{gpsinstalldate},#{licensenumber},#{xinghao},#{gefu},#{vendor},
		#{workfor},#{machinerysize},#{weight},#{volume},#{brand},
		#{automation},	#{powertype},#{purchasetime},#{producetime},#{driverlicense},
		#{enginenumber},#{bodynumber},#{machinerypower},#{cooperativeId},#{zipcode})
	</insert>
	<select id="get" resultMap="FarmMachineryRs" parameterType="Integer">
		select
		<include refid="fields" />, cooperativeId
		from
		<include refid="tablename" />
		where id=${id}
	</select>
	<select id="getLicensenumberByGps" resultMap="FarmMachineryRs" parameterType="String">
		select distinct licensenumber from <include refid="tablename" />	where gpsdevice=${gpsdevice}
	</select>
	<update id="update" parameterType="FarmMachinery">
		update
		<include refid="tablename" />
		set
		machineryNumber=#{machineryNumber},machineryType=#{machineryType},status=#{status},ownerName=#{ownerName},
		owneridnumber=#{owneridnumber},ownerTelephone=#{ownerTelephone},owneraddress=#{owneraddress},
		gpsdevice=#{gpsdevice},gpsinstaller=#{gpsinstaller},gpstype=#{gpstype},gpsinstalldate=#{gpsinstalldate},
		licensenumber=#{licensenumber},xinghao=#{xinghao},gefu=#{gefu},
		vendor=#{vendor},workfor=#{workfor},machinerysize=#{machinerysize},weight=#{weight},
		volume=#{volume},brand=#{brand},automation=#{automation},
		powertype=#{powertype},purchasetime=#{purchasetime},producetime=#{producetime},driverlicense=#{driverlicense},
		enginenumber=#{enginenumber},bodynumber=#{bodynumber},machinerypower=#{machinerypower},
		cooperativeId=#{cooperativeId},zipcode=#{zipcode}
		where id=#{id}
	</update>
	<delete id="delete" parameterType="FarmMachinery">
		delete from
		<include refid="tablename" />
		where id=#{id}
	</delete>
	<!-- 
	<select id="getCapacityById" resultMap="warehouseCapacityRs"
		parameterType="Integer">
		select sum(core_capacity) as core_capacity,
		sum(related_capacity) as related_capacity,
		sum(common_capacity) as
		common_capacity,
		sum(core_current_amount) as core_current_amount,
		sum(related_current_amount) as related_current_amount,
		sum(common_current_amount) as common_current_amount

		from stm_area as t1
		left join stm_region as t2 on t1.region_id=t2.id

		where t2.warehouse_id =${id}
	</select> -->
</mapper>
