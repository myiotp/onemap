<?xml version="1.0" encoding="UTF-8" ?>    
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.onemap.dao.PurchasePesticideTypeDao">
	
	<resultMap type="PurchasePesticideType" id="PurchasePesticideTypeRs">
		<result column="id" property="id" />
		<result column="pesticideType" property="pesticideType" />
		<result column="pesticideTypeId" property="pesticideTypeId" />
		<result column="name" property="name" />
		<result column="serialNumber" property="serialNumber" />
		<result column="level" property="level" />
		<result column="producer" property="producer" />
		<result column="producerTel" property="producerTel" />
		<result column="seller" property="seller" />
		<result column="sellerTel" property="sellerTel" />
		<result column="brief" property="brief" />
		<result column="purchaseTime" property="purchaseTime" />
		<result column="purchaseAmount" property="purchaseAmount" />
		<result column="purchaser" property="purchaser" />
		<result column="cooperativeId" property="cooperativeId" />	
		
		<result column="typename" property="typename" />
		<result column="totalamount" property="totalamount" />
		
		<result column="queryBeginTime" property="queryBeginTime" />
		<result column="queryEndTime" property="queryEndTime" />
		
		<association property="cooperative" javaType="Site">
			<result property="id" column="cooperativeId"/>
			<result property="cooperativeNumber" column="cooperativeNumber"/>
		 </association>
		 <collection property="whereClause" ofType="Clause">			
		 </collection>
	</resultMap>
	
	<sql id="fields">
		id,<include refid="fieldsForInsert" />
	</sql>
	<sql id="fieldsForInsert">
		name,serialNumber,level,producer,producerTel,seller,sellerTel,brief,purchaseTime,purchaseAmount,purchaser,cooperativeId
	</sql>
	<sql id="tablename">
		PurchasePesticideType
	</sql>
	<select id="list" resultMap="PurchasePesticideTypeRs" parameterType="PurchasePesticideType">
		select PurchasePesticideType.id as id, PesticideType.pesticideType as pesticideType, PurchasePesticideType.pesticideTypeId as pesticideTypeId,
		cooperative.cooperativeNumber as cooperativeNumber,
		<include refid="fieldsForInsert" />		
		from
		<include refid="tablename" />
		left outer join PesticideType on PurchasePesticideType.pesticideTypeId=PesticideType.id 
		left outer join cooperative on PurchasePesticideType.cooperativeId = cooperative.id 
		<trim prefix="where" prefixOverrides="and |or">
			<if test="cooperativeId != null">
				PurchasePesticideType.cooperativeId = #{cooperativeId} 
			</if>
			<if test="pesticideTypeId != null">
				and PurchasePesticideType.pesticideTypeId = #{pesticideTypeId}
			</if>
			<if test="queryBeginTime != null and queryEndTime != null">
				and (date(purchaseTime) between #{queryBeginTime} and #{queryEndTime})
			</if>
		</trim>
	</select>
	<select id="listByLimit" resultMap="PurchasePesticideTypeRs" parameterType="PurchasePesticideType">
		select PurchasePesticideType.id as id, PesticideType.pesticideType as pesticideType,PurchasePesticideType.pesticideTypeId as pesticideTypeId,
		cooperative.cooperativeNumber as cooperativeNumber,
		<include refid="fieldsForInsert" />		
		from
		<include refid="tablename" />
		left outer join PesticideType on PurchasePesticideType.pesticideTypeId=PesticideType.id 
		left outer join cooperative on PurchasePesticideType.cooperativeId = cooperative.id 
		<trim prefix="where" prefixOverrides="and |or">
			<if test="cooperativeId != null">
				PurchasePesticideType.cooperativeId = #{cooperativeId} 
			</if>
			<if test="pesticideTypeId != null">
				and PurchasePesticideType.pesticideTypeId = #{pesticideTypeId}
			</if>
			<if test="whereClause != null">
				<foreach item="clause" collection="whereClause" separator=" AND " open="(" close=")"> 
	                ${clause.column} ${clause.operator} #{clause.value} 
	            </foreach> 
			</if>
		</trim>
		<if test="orderBy != null and order != null">
			order by ${orderBy} ${order}
		</if>
		 limit #{startPos} ,#{pageSize}  
	</select>
	<insert id="save" parameterType="PurchasePesticideType">
		insert into
		<include refid="tablename" />
		(
		pesticideTypeId,<include refid="fieldsForInsert" />
		) 
		values(#{pesticideTypeId},#{name},#{serialNumber},#{level},#{producer},#{producerTel},#{seller},#{sellerTel},
		#{brief},#{purchaseTime},#{purchaseAmount},#{purchaser},#{cooperativeId})
	</insert>
	<select id="get" resultMap="PurchasePesticideTypeRs" parameterType="Integer">
		select
		<include refid="fields" />,pesticideTypeId as pesticideTypeId
		from
		<include refid="tablename" />
		where id=${id}
	</select>
	<select id="count" resultType="Integer">
		select
		count(*)
		from
		<include refid="tablename" />	
		left outer join PesticideType on PurchasePesticideType.pesticideTypeId=PesticideType.id 
		left outer join cooperative on PurchasePesticideType.cooperativeId = cooperative.id 
		<trim prefix="where" prefixOverrides="and |or">
			<if test="cooperativeId != null">
				PurchasePesticideType.cooperativeId = #{cooperativeId} 
			</if>
			<if test="pesticideTypeId != null">
				and PurchasePesticideType.pesticideTypeId = #{pesticideTypeId}
			</if>
			<if test="whereClause != null">
				<foreach item="clause" collection="whereClause" separator=" AND " open="(" close=")"> 
	                ${clause.column} ${clause.operator} #{clause.value} 
	            </foreach> 
			</if>
		</trim>
	</select>
	
	<update id="update" parameterType="PurchasePesticideType">
		update
		<include refid="tablename" />
		set
		pesticideTypeId=#{pesticideTypeId},name=#{name},serialNumber=#{serialNumber},level=#{level},producer=#{producer},
		producerTel=#{producerTel},seller=#{seller},sellerTel=#{sellerTel},brief=#{brief},purchaseTime=#{purchaseTime},
		purchaseAmount=#{purchaseAmount},purchaser=#{purchaser},cooperativeId=#{cooperativeId}
		where id=#{id}
	</update>
	<delete id="delete" parameterType="PurchasePesticideType">
		delete from
		<include refid="tablename" />
		where id=#{id}
	</delete>
	<select id="tongji" resultMap="PurchasePesticideTypeRs" parameterType="PurchasePesticideType">
		select pesticideType.pesticideType as typename, t1.totalamount from (select pesticideTypeId as typeId, SUM(purchaseAmount) as totalamount from PurchasePesticideType 
		<if test="cooperativeId != null">
		     WHERE cooperativeId=#{cooperativeId} 
		</if>
		<if test="queryBeginTime != null and queryEndTime != null">
			and (date(purchaseTime) between #{queryBeginTime} and #{queryEndTime})
		</if>
		 GROUP BY pesticideTypeId) as t1 LEFT OUTER JOIN pesticideType ON t1.typeId=pesticideType.id
	</select>
</mapper>
